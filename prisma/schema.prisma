generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model incidentreportstatus {
  id               String   @id @default(uuid())
  assignedAt       DateTime @default(now())
  incidentReportId String
  statusTypeId     String

  @@unique([incidentReportId, statusTypeId], map: "IncidentReportStatus_incidentReportId_statusTypeId_key")
  @@index([incidentReportId], map: "IncidentReportStatus_incidentReportId_idx")
  @@index([statusTypeId], map: "IncidentReportStatus_statusTypeId_idx")
}

model branch {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String
  hexColor  String?
  building  building[]
}

model building {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  branchId  String?
  branch    branch?  @relation(fields: [branchId], references: [id])
  hexColor  String?

  @@index([branchId], map: "Building_branchId_idx")
}

model buildingfloor {
  id          String   @id @default(uuid())
  floorNumber Int
  buildingId  String
  createdAt   DateTime @default(now())
  room        room[]

  @@unique([buildingId, floorNumber], map: "BuildingFloor_buildingId_floorNumber_key")
  @@index([buildingId], map: "BuildingFloor_buildingId_idx")
}

model department {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  room      room[]
}

model equipment {
  id                            String                       @id @default(uuid())
  admissionDate                 DateTime
  serialNumber                  String?
  codeBar                       String?
  internalCode                  String?
  margesiCode                   String?
  updatedAt                     DateTime                     @updatedAt
  createdAt                     DateTime                     @default(now())
  equipmentSpecificationSheetId String?
  equipmentSpecificationSheet   equipmentspecificationsheet? @relation(fields: [equipmentSpecificationSheetId], references: [id])

  @@index([equipmentSpecificationSheetId], map: "Equipment_equipmentSpecificationSheetId_idx")
}

model equipmentbrand {
  id                          String                        @id @default(uuid())
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime                      @updatedAt
  name                        String
  equipmentspecificationsheet equipmentspecificationsheet[]
}

model equipmentmargesi {
  id                          String                        @id @default(uuid())
  code                        String?
  denomination                String
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime                      @updatedAt
  equipmentspecificationsheet equipmentspecificationsheet[]
}

model equipmentspecificationsheet {
  id                 String            @id @default(uuid())
  modelName          String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  equipmentBrandId   String?
  width              Int?
  height             Int?
  length             Int?
  equipmentMargesiId String?
  equipmentMargesi   equipmentmargesi? @relation(fields: [equipmentMargesiId], references: [id])
  equipmentBrand     equipmentbrand?   @relation(fields: [equipmentBrandId], references: [id])
  equipment          equipment[]

  @@index([equipmentBrandId], map: "EquipmentSpecificationSheet_equipmentBrandId_idx")
  @@index([equipmentMargesiId], map: "EquipmentSpecificationSheet_equipmentMargesiId_idx")
}

model equipmenttracking {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  equipmentId String
  roomId      String
  date        DateTime
  description String?

  @@index([equipmentId], map: "EquipmentTracking_equipmentId_idx")
  @@index([roomId], map: "EquipmentTracking_roomId_idx")
}

model incidentreport {
  id           String    @id @default(uuid())
  code         String
  createdAt    DateTime  @default(now())
  description  String?
  incidentDate DateTime?
  departmentId String?
  creatorId    String

  @@index([departmentId], map: "IncidentReport_departmentId_idx")
}

model incidentreportstatustype {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique(map: "IncidentReportStatusType_name_key")
  isDefault Boolean  @default(false)
}

model room {
  id              String        @id @default(uuid())
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  name            String
  parentRoomId    String?
  buildingFloorId String
  buildingFLoor   buildingfloor @relation(fields: [buildingFloorId], references: [id])
  departmentId    String?
  department      department?   @relation(fields: [departmentId], references: [id])

  @@index([buildingFloorId], map: "Room_buildingFloorId_idx")
  @@index([departmentId], map: "Room_departmentId_idx")
  @@index([parentRoomId], map: "Room_parentRoomId_idx")
}
